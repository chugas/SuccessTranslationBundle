{% extends layout %}

{% block title %}{{ 'translations.page_title'|trans({}, 'LexikTranslationBundle') }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {% stylesheets filter="?yui_css" output='css/compiled/optimized-jqgrid.css'
        '@LexikTranslationBundle/Resources/public/lib/jqGrid/css/ui.jqgrid.css' %}
        <link rel="stylesheet" href="{{ asset_url }}">
    {% endstylesheets %}
{% endblock %}

{% block content %}
{% for flashMessage in app.session.flashbag.get('success') %}
<span>{{ flashMessage }}</span>
{% endfor %}

<div>
    <a id="create-translation" href="#{{ path('lexik_translation_new') }}" role="button" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary">
        <span class="ui-button-icon-primary ui-icon ui-icon-circle-plus"></span>
        <span class="ui-button-text">{{ 'translations.new_translation'|trans({}, 'LexikTranslationBundle') }}</span>
    </a>
    &nbsp;
    <a href="{{ path('lexik_translation_invalidate_cache') }}" role="button" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary">
        <span class="ui-button-icon-primary ui-icon ui-icon-trash"></span>
        <span class="ui-button-text">{{ 'translations.invalidate_cache'|trans({}, 'LexikTranslationBundle') }}</span>
    </a>
    &nbsp;
    <button id="select-colunms" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary">
        <span class="ui-button-icon-primary ui-icon ui-icon-flag"></span>
        <span class="ui-button-text">{{ 'translations.show_hide_columns'|trans({}, 'LexikTranslationBundle') }}</span>
    </button>
    {% if inputType == 'textarea'  %}
    <button id="save-row" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary">
        <span class="ui-button-icon-primary ui-icon ui-icon-check"></span>
        <span class="ui-button-text">{{ 'translations.save_row'|trans({}, 'LexikTranslationBundle') }}</span>
    </button>
    {% endif %}
</div>

<br />

<table id="trans-grid"></table>
<div id="grid-nav"></div>

<div id="dialog-form" title="{{ 'translations.add_translation'|trans({}, 'LexikTranslationBundle') }}" style="display: none;">
  <p class="validateTips">{{ 'translations.all_form_fields_required'|trans({}, 'LexikTranslationBundle') }}</p>
  <form id="translation-add-form" action="{{ path('lexik_translation_new') }}" method="post">
    {{ form_row(form.key, {'attr': { 'class': 'span4', 'autocomplete' : 'off' } }) }}
    {{ form_row(form.domain) }}
    {% for translation in form.translations %}
        {{ form_row(translation) }}
    {% endfor %}
    {{ form_rest(form) }}
  </form>
</div>

{% endblock %}

{% block footer %}
    {{ parent() }}
    {% javascripts filter="?yui_js" output='js/compiled/optimized-translator-1.js'
        '@LexikTranslationBundle/Resources/public/lib/jqGrid/js/i18n/grid.locale-en.js'
        '@LexikTranslationBundle/Resources/public/lib/jqGrid/js/jquery.jqGrid.min.js' %}
        <script src="{{ asset_url }}" type="text/javascript"></script>
    {% endjavascripts %}
<script type="text/javascript">
<!--
$(document).ready(function() {
    var columnNames = [
        "id"
        ,'{{ 'translations.domain'|trans({}, 'LexikTranslationBundle') }}'
        ,'{{ 'translations.key'|trans({}, 'LexikTranslationBundle') }}'
{% for locale in locales %}
        ,'{{ locale }}'
{% endfor %}
    ];

    var columnModel = [
        { name: "id", index: "id", width: 40, sortable: true, editable: false, search: false, hidden: true }
        ,{ name:"{{ 'translations.domain'|trans({}, 'LexikTranslationBundle') }}", index: "domain", width: 100, sortable: true, editable: false }
        ,{ name:"{{ 'translations.key'|trans({}, 'LexikTranslationBundle') }}", index: "key", width: 340, sortable: true, editable: false }
{% for locale in locales %}
        ,{ name: "{{ locale }}", index: "{{ locale }}", width: 540, sortable: false, editable:true, {{ inputType == 'textarea' ? 'edittype: "textarea", ' : '' }}search: true }
{% endfor %}
    ];

    var lastSelected, lastSaved;

    jQuery("#trans-grid").jqGrid({
        url: "{{ path('lexik_translation_list') }}",
        datatype: "json",
        colNames: columnNames,
        colModel: columnModel,
        rowNum: 40,
        rowList: [20, 40, 60],
        pager: "#grid-nav",
        sortname: "id",
        viewrecords: true,
        sortorder: "asc",
        onSelectRow: function(id) {
            var editParams = {
                keys: true,
                successfunc: function() {
                    lastSelected = null;

                    return true;
                }, 
                afterrestorefunc: function() {
                    lastSelected = null;

                    return true;
                }
            };

            if(id && id !== lastSelected) {
                jQuery('#trans-grid').jqGrid("saveRow", lastSelected);
                jQuery('#trans-grid').jqGrid("editRow", id, editParams);
                lastSelected = id;
            }
        },
        editurl: "{{ path('lexik_translation_update') }}",
        caption: "{{ 'translations.grid_caption'|trans({}, 'LexikTranslationBundle') }}"
    });

    jQuery("#trans-grid").setGridWidth(1000);
    jQuery("#trans-grid").setGridHeight(550);
    jQuery("#trans-grid").jqGrid("navGrid", "#grid-nav", { edit:false, add:false, del:false, search: false });
    jQuery("#trans-grid").jqGrid("filterToolbar", { defaultSearch: "cn" });

    jQuery("#select-colunms").click(function() {
        jQuery("#trans-grid").jqGrid("columnChooser", {});
        return false;
    });

    {% if inputType == 'textarea'  %}
    jQuery("#save-row").click(function() {
        if (lastSelected && lastSaved != lastSelected) {
            jQuery('#trans-grid').saveRow(lastSelected);
            lastSaved = lastSelected;
        }
    });
    {% endif %}
});
//-->
</script>

<script>
$(function() {
  
var key = $( "#trans_unit_key" ),
allFields = $( [] ).add( key ),
tips = $( ".validateTips" );

function updateTips( t ) {
  tips
    .text( t )
    .addClass( "ui-state-highlight" );
    setTimeout(function() {
      tips.removeClass( "ui-state-highlight", 1500 );
    }, 500 );
}

function checkLength( o, n, min, max ) {
  if(min == 0 && max == 0){
    if ( o.val().length == min ) {
      updateTips( "El campo " + n + " no puede ser vacio." );
      return false;  
    } else {
      return true;
    }
  }
  
  if ( o.val().length > max || o.val().length < min ) {
    o.addClass( "ui-state-error" );
    updateTips( "Length of " + n + " must be between " +
    min + " and " + max + "." );
    return false;
  } else {
    return true;
  }
}

$( "#dialog-form" ).dialog({
  autoOpen: false,
  height: 430,
  width: 430,
  modal: true,
  buttons: {
    "{{ 'translations.add'|trans({}, 'LexikTranslationBundle') }}": function() {
      var bValid = true;
      allFields.removeClass( "ui-state-error" );
      bValid = bValid && checkLength( key, "Clave", 0, 0 );
      if ( bValid ) {
        $('#translation-add-form').submit();
      }
    },
    Cancel: function() {
      $( this ).dialog( "close" );
    }
  },
  close: function() {
    allFields.val( "" ).removeClass( "ui-state-error" );
  }
});
  
$( "#create-translation" )
  .button()
  .click(function() {
    $( "#dialog-form" ).dialog( "open" );
  });
});
</script>

{% endblock %}